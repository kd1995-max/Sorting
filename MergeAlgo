void merge(int a[], int low, int mid, int high){
	int n1 = mid - low + 1 , n2 = high -mid;
	//auxillary array fill
	int left[n1] , right[n2];
	
	for(int i = 0; i < n1; i++){
		left[i] = a[low + i];
	}
	for(int i = 0; i < n2; i++){
		right[i] = a[mid + 1 + i];
	}
	
	//merge
	int i = 0, j = 0 , k = 0;
	while(i < n1 && j < n2)	
	{
		if(left[i] <= right[j])
		a[k++] = left[i++];
		else
		a[k++] =right[j++];
	}
	
	while(i < n1)
	{
		a[k++] = left[i++];
	}
	while(j < n2)
	{
		a[k++] = right[j++];
	}
}

void MergeSort(a[] , l , r)
{

	if(r > l)
	{
	
		int mid = l +(l - r)/2;
		MergeSort(a , l , mid);
		MergeSort(a , mid + 1, r);
		merge(a , l , mid , r);;
	
	}

}
